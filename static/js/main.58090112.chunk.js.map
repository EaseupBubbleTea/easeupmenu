{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","contents","name","desc","prices","small","large","menuCss","detailCss","slide","content","join","additionalCss","dest","priceSmall","priceLarge","react_default","a","createElement","className","slides","menus","_this","forEach","x","push","origin","destination","direction","_this2","this","react_fullpage_default","anchors","sectionsColor","onLeave","bind","afterLoad","render","_ref","state","fullpageApi","id","onClick","moveSectionDown","Component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iPAwHeA,6MA5GbC,SAAW,CACT,CACEC,KAAM,YACNC,KAAI,ipCAIJC,OAAQ,CAAEC,MAAO,GAAKC,MAAO,IAC7BC,QAAS,CAAC,WAAY,sBACtBC,UAAW,CAAC,cAAe,2BAE7B,CACEN,KAAM,YACNC,KAAI,2oCAIJC,OAAQ,CAAEC,MAAO,GAAKC,MAAO,IAC7BC,QAAS,CAAC,WAAY,sBACtBC,UAAW,CAAC,cAAe,2BAE7B,CACEN,KAAM,YACNC,KAAI,2oCAIJC,OAAQ,CAAEC,MAAO,GAAKC,MAAO,IAC7BC,QAAS,CAAC,WAAY,sBACtBC,UAAW,CAAC,cAAe,2BAE7B,CACEN,KAAM,YACNC,KAAI,2oCAIJC,OAAQ,CAAEC,MAAO,GAAKC,MAAO,IAC7BC,QAAS,CAAC,WAAY,sBACtBC,UAAW,CAAC,cAAe,8BAK/BC,MAAQ,SAACC,GACP,IAAMH,EAAUG,EAAO,QAAYC,KAAK,KAClCC,EAAgBF,EAAO,UAAcC,KAAK,KAC1CE,EAAOH,EAAO,KACdI,EAAaJ,EAAO,OAAP,MACbK,EAAaL,EAAO,OAAP,MACnB,OACEM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAWZ,KAGlBS,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAWP,GACXC,KAIPG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,qCAASJ,EAAT,uBACAE,EAAAC,EAAAC,cAAA,qCAASH,EAAT,6BAKVK,OAAS,WACP,IAAIC,EAAQ,GAIZ,OAHAC,EAAKrB,SAASsB,QAAQ,SAACC,GACrBH,EAAMI,KAAKH,EAAKb,MAAMe,MAEjBH,0EApFDK,EAAQC,EAAaC,sCAGnBF,EAAQC,EAAaC,qCAsFtB,IAAAC,EAAAC,KACP,OACEd,EAAAC,EAAAC,cAACa,EAAAd,EAAD,CACEe,QAAS,CAAC,YAAa,aAAc,aACrCC,cAAe,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAE9HC,QAASJ,KAAKI,QAAQC,KAAKL,MAC3BM,UAAWN,KAAKM,UAAUD,KAAKL,MAC/BO,OAAQ,SAAAC,GAA4BA,EAAzBC,MAAyB,IAAlBC,EAAkBF,EAAlBE,YAChB,OACExB,EAAAC,EAAAC,cAAA,OAAKuB,GAAG,oBACNzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,UAAQwB,QAAS,kBAAMF,EAAYG,oBAAnC,cAIDd,EAAKT,oBA3GFwB,aCQEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASb,OAAOrB,EAAAC,EAAAC,cAACiC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.58090112.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.scss';\nimport ReactFullpage from '@fullpage/react-fullpage';\n\nclass App extends Component {\n  onLeave(origin, destination, direction) {\n    // console.log(\"Leaving section \" + origin.index);\n  }\n  afterLoad(origin, destination, direction) {\n    // console.log(\"After load: \" + destination.index);\n  }\n\n  contents = [\n    {\n      name: \"signature\",\n      desc: `เพราะรสชาดและคุณภาพคือเรื่องสำคัญสูงสุดสำหรับเรา\n    จึงเป็นจุดเริ่มต้นของการเดินทางสรรหาวัตถุดิบถึงต้นตำหรับที่ไถหนาน ไต้หวัน\n    นำมาผสานกับประสบการณ์เฉพาะในแบบฉบับของ EaseUp\n    จนได้ชานมคุณภาพอย่างที่เราภูมิใจ`,\n      prices: { small: 40 , large: 50 },\n      menuCss: [\"menuItem\", \"menuItem__greentea\"],\n      detailCss: [\"item-detail\", \"item-detail__signature\"]\n    },\n    {\n      name: \"signature\",\n      desc: `เพราะรสชาดและคุณภาพคือเรื่องสำคัญสูงสุดสำหรับเรา\\\n    จึงเป็นจุดเริ่มต้นของการเดินทางสรรหาวัตถุดิบถึงต้นตำหรับที่ไถหนาน ไต้หวัน\\\n    นำมาผสานกับประสบการณ์เฉพาะในแบบฉบับของ EaseUp\\\n    จนได้ชานมคุณภาพอย่างที่เราภูมิใจ`,\n      prices: { small: 40 , large: 50 },\n      menuCss: [\"menuItem\", \"menuItem__greentea\"],\n      detailCss: [\"item-detail\", \"item-detail__signature\"]\n    },\n    {\n      name: \"signature\",\n      desc: `เพราะรสชาดและคุณภาพคือเรื่องสำคัญสูงสุดสำหรับเรา\\\n    จึงเป็นจุดเริ่มต้นของการเดินทางสรรหาวัตถุดิบถึงต้นตำหรับที่ไถหนาน ไต้หวัน\\\n    นำมาผสานกับประสบการณ์เฉพาะในแบบฉบับของ EaseUp\\\n    จนได้ชานมคุณภาพอย่างที่เราภูมิใจ`,\n      prices: { small: 40 , large: 50 },\n      menuCss: [\"menuItem\", \"menuItem__greentea\"],\n      detailCss: [\"item-detail\", \"item-detail__signature\"]\n    },\n    {\n      name: \"signature\",\n      desc: `เพราะรสชาดและคุณภาพคือเรื่องสำคัญสูงสุดสำหรับเรา\\\n    จึงเป็นจุดเริ่มต้นของการเดินทางสรรหาวัตถุดิบถึงต้นตำหรับที่ไถหนาน ไต้หวัน\\\n    นำมาผสานกับประสบการณ์เฉพาะในแบบฉบับของ EaseUp\\\n    จนได้ชานมคุณภาพอย่างที่เราภูมิใจ`,\n      prices: { small: 40 , large: 50 },\n      menuCss: [\"menuItem\", \"menuItem__greentea\"],\n      detailCss: [\"item-detail\", \"item-detail__signature\"]\n    },\n\n  ];\n\n  slide = (content) => {\n    const menuCss = content[\"menuCss\"].join(' ')\n    const additionalCss = content[\"detailCss\"].join(' ')\n    const dest = content[\"desc\"]\n    const priceSmall = content[\"prices\"][\"small\"]\n    const priceLarge = content[\"prices\"][\"large\"]\n    return (\n      <div className=\"section\">\n        <div className=\"slide\">\n          <div className={menuCss}>\n          </div>\n        </div>\n        <div className=\"slide\">\n          <div className=\"item-detail\">\n            <p className={additionalCss}>\n              {dest}\n            </p>\n          </div>\n        </div>\n        <div className=\"slide\">\n          <div className=\"item-price\">\n            <h1>ราคา</h1>\n            <p>เล็ก {priceSmall} บาท</p>\n            <p>ใหญ่ {priceLarge} บาท</p>\n          </div>\n        </div>\n      </div>)\n  }\n  slides = () => {\n    let menus = []\n    this.contents.forEach((x) => {\n      menus.push(this.slide(x));\n    })\n    return menus\n  }\n\n\n\n  render() {\n    return (\n      <ReactFullpage\n        anchors={[\"firstPage\", \"secondPage\", \"thirdPage\"]}\n        sectionsColor={[\"#282c34\", \"#282c34\", \"#282c34\", \"#282c34\", \"#282c34\", \"#282c34\", \"#282c34\", \"#282c34\", \"#282c34\", \"#282c34\", \"#282c34\"]}\n        // scrollOverflow={true}\n        onLeave={this.onLeave.bind(this)}\n        afterLoad={this.afterLoad.bind(this)}\n        render={({ state, fullpageApi }) => {\n          return (\n            <div id=\"fullpage-wrapper\">\n              <div className=\"section section1\">\n                <h3>Easeup</h3>\n                <button onClick={() => fullpageApi.moveSectionDown()}>\n                  Move down\n                </button>\n              </div>\n              {this.slides()}\n            </div>\n          );\n        }}\n      />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}